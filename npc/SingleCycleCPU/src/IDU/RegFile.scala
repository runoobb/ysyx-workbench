package IDU
import chisel3._


class RegFile extends Module{
    val io = IO(new Bundle{
        // src reg addr
        val Ra = Input(UInt(5.W))
        val Rb = Input(UInt(5.W))
        // dst reg addr
        val Rw = Input(UInt(5.W))
        // write data
        val Busw = Input(UInt(32.W))
        // control sig generated by ControlGen
        val RegWr = Input(UInt(1.W))
        val Busa = Output(UInt(32.W))
        val Busb = Output(UInt(32.W))
    })
    val RFReg = RegInit(VecInit(Seq.fill(32)(0.U(32.W))))
    io.Busa := RFReg(io.Ra)
    io.Busb := RFReg(io.Rb)
    when(io.Rw === 0.U){
        RFReg(io.Rw) := 0.U
    }.otherwise{
        RFReg(io.Rw) := io.Busw
    }

}
